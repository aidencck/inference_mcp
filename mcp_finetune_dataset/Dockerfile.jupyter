# Jupyter开发环境Dockerfile
FROM nvidia/cuda:11.8-runtime-ubuntu20.04

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV JUPYTER_ENABLE_LAB=yes

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    python3.9 \
    python3.9-pip \
    python3.9-dev \
    git \
    wget \
    curl \
    vim \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/*

# 创建Python软链接
RUN ln -sf /usr/bin/python3.9 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.9 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# 升级pip
RUN pip install --upgrade pip

# 安装Jupyter相关包
RUN pip install --no-cache-dir \
    jupyterlab \
    jupyter \
    ipywidgets \
    matplotlib \
    seaborn \
    plotly \
    pandas \
    numpy \
    scikit-learn

# 安装JupyterLab扩展
RUN jupyter labextension install @jupyter-widgets/jupyterlab-manager

# 复制requirements文件并安装依赖
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 创建Jupyter配置
RUN jupyter lab --generate-config

# 设置Jupyter配置
RUN echo "c.ServerApp.ip = '0.0.0.0'" >> ~/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.port = 8888" >> ~/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.open_browser = False" >> ~/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.allow_root = True" >> ~/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.token = 'mcp-training-2024'" >> ~/.jupyter/jupyter_lab_config.py

# 暴露端口
EXPOSE 8888

# 启动命令
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]